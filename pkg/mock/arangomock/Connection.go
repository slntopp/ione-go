// Code generated by mockery v1.0.0. DO NOT EDIT.

package arangomock

import context "context"
import driver "github.com/arangodb/go-driver"
import mock "github.com/stretchr/testify/mock"

// Connection is an autogenerated mock type for the Connection type
type Connection struct {
	mock.Mock
}

// Do provides a mock function with given fields: ctx, req
func (_m *Connection) Do(ctx context.Context, req driver.Request) (driver.Response, error) {
	ret := _m.Called(ctx, req)

	var r0 driver.Response
	if rf, ok := ret.Get(0).(func(context.Context, driver.Request) driver.Response); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, driver.Request) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Endpoints provides a mock function with given fields:
func (_m *Connection) Endpoints() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// NewRequest provides a mock function with given fields: method, path
func (_m *Connection) NewRequest(method string, path string) (driver.Request, error) {
	ret := _m.Called(method, path)

	var r0 driver.Request
	if rf, ok := ret.Get(0).(func(string, string) driver.Request); ok {
		r0 = rf(method, path)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Request)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(method, path)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Protocols provides a mock function with given fields:
func (_m *Connection) Protocols() driver.ProtocolSet {
	ret := _m.Called()

	var r0 driver.ProtocolSet
	if rf, ok := ret.Get(0).(func() driver.ProtocolSet); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.ProtocolSet)
		}
	}

	return r0
}

// SetAuthentication provides a mock function with given fields: _a0
func (_m *Connection) SetAuthentication(_a0 driver.Authentication) (driver.Connection, error) {
	ret := _m.Called(_a0)

	var r0 driver.Connection
	if rf, ok := ret.Get(0).(func(driver.Authentication) driver.Connection); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Connection)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(driver.Authentication) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Unmarshal provides a mock function with given fields: data, result
func (_m *Connection) Unmarshal(data driver.RawObject, result interface{}) error {
	ret := _m.Called(data, result)

	var r0 error
	if rf, ok := ret.Get(0).(func(driver.RawObject, interface{}) error); ok {
		r0 = rf(data, result)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateEndpoints provides a mock function with given fields: endpoints
func (_m *Connection) UpdateEndpoints(endpoints []string) error {
	ret := _m.Called(endpoints)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string) error); ok {
		r0 = rf(endpoints)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
