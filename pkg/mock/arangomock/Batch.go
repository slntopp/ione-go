// Code generated by mockery v1.0.0. DO NOT EDIT.

package arangomock

import context "context"
import driver "github.com/arangodb/go-driver"
import mock "github.com/stretchr/testify/mock"
import time "time"

// Batch is an autogenerated mock type for the Batch type
type Batch struct {
	mock.Mock
}

// BatchID provides a mock function with given fields:
func (_m *Batch) BatchID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Delete provides a mock function with given fields: ctx
func (_m *Batch) Delete(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Extend provides a mock function with given fields: ctx, ttl
func (_m *Batch) Extend(ctx context.Context, ttl time.Duration) error {
	ret := _m.Called(ctx, ttl)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Duration) error); ok {
		r0 = rf(ctx, ttl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LastTick provides a mock function with given fields:
func (_m *Batch) LastTick() driver.Tick {
	ret := _m.Called()

	var r0 driver.Tick
	if rf, ok := ret.Get(0).(func() driver.Tick); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(driver.Tick)
	}

	return r0
}
